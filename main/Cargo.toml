[package]
name = "main"
version.workspace = true
edition.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "cnosdb"
path = "src/main.rs"

[dependencies]
models = { path = "../common/models" }
config = { path = "../config" }
line_protocol = { path = "../common/line_protocol" }
protos = { path = "../common/protos" }
query = { path = "../query_server/query" }
trace = { path = "../common/trace" }
tskv = { path = "../tskv" }
meta = { path = "../meta" }
coordinator = { path = "../coordinator" }
spi = { path = "../query_server/spi" }
mem_allocator = { path = "../common/mem_allocator" }
metrics = { path = "../common/metrics" }
http_protocol = { path = "../common/http_protocol" }
memory_pool = { path = "../common/memory_pool" }
license = { path = "../common/license" }

async-stream = { workspace = true }
async-trait = { workspace = true }
backtrace = { workspace = true }
base64 = { workspace = true }
chrono = { workspace = true }
clap = { workspace = true, features = ["derive", "env"] }
ctrlc = { workspace = true, features = ["termination"] }
arrow-flight = { workspace = true, features = ["flight-sql-experimental"] }
datafusion = { workspace = true }
flatbuffers = { workspace = true }
futures = { workspace = true, default-features = false, features = ["alloc"] }
lazy_static = { workspace = true }
libc = { workspace = true }
num_cpus = { workspace = true }
once_cell = { workspace = true, features = ["parking_lot"] }
parking_lot = { workspace = true }
prost = { workspace = true }
prost-types = { workspace = true }
regex = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
snafu = { workspace = true }
tokio = { workspace = true, features = ["macros", "net", "parking_lot", "rt-multi-thread", "signal", "sync", "time"] }
tokio-stream = { workspace = true, features = ["net"] }
tonic = { workspace = true, features = ["transport", "tls"] }
warp = { workspace = true, features = ["tls"] }
os_info = { workspace = true }
reqwest = { workspace = true, features = ["native-tls", "json"] }
moka = {workspace = true}
dashmap = {workspace = true}
openraft = { workspace = true, features = ["serde"] }
actix-web = {workspace = true}
byteorder = {workspace = true}
sled = {workspace = true}
tracing-futures = {workspace = true}
ureq = { workspace = true, features = ["json", "charset"] }
backoff = {workspace = true}
sys-info = {workspace = true}
surf = { workspace = true, features = ["curl-client", "encoding"], default-features=false }
pprof = { workspace = true, features = ["flamegraph", "protobuf-codec","frame-pointer"] }


[dev-dependencies]
reqwest = "0.11"
prost-types = { version = "0.11.2" }

[[example]]
name = "flight_sql_server"
path = "examples/flight_sql_server.rs"

[[example]]
name = "flight_rpc_server"
path = "examples/flight_rpc_server.rs"
syntax = "proto3";
package meta_service;

// *********************Tenant Meta Data**************  
// **    /cluster_name -> [vector<NodeInfo>] 集群、数据节点等信息
//       /cluster_name/incr_id -> id
// **    /cluster_name/tenant_name/users -> [vector<UserInfo>] 租户下用户信息、访问权限等
// **    /cluster_name/tenant_name/db_name -> [DatabaseInfo] db相关信息、保留策略等
// **    /cluster_name/tenant_name/db_name/buckets/id -> [BucketInfo] bucket相关信息
// **    /cluster_name/tenant_name/db_name/schemas/name -> [SchemaInfo] schema相关信息
// **    


message Resource {
	required uint64 id = 1;
	required uint64 cpu = 2;
	required uint64 disk = 3;
	required uint64 memory = 4;
}

message MetaData {
	required uint64 version = 1;

	repeated UserInfo users = 2;
	repeated DatabaseInfo dbs = 3;
	repeated NodeInfo data_nodes = 4;
	repeated NodeInfo meta_nodes = 5;
}

message UserInfo {
	required string name = 1;
	required string pwd = 2;
	required uint64 perm = 3; //read write admin bitmap
}

message NodeInfo {
	required uint64 id = 1;
	required string rpc_addr = 2;
	required string http_addr = 3;
	required uint32 status = 4;
    required Resource 
	required Location
}

message DatabaseInfo {
	required string name = 1;
	required RetentionPolicyInfo policy = 2;
	repeated BucketInfo buckets = 3;
}

message RetentionPolicyInfo {
	required int64 database_duration = 1;
	required int64 bucket_duration = 2;
	required uint32 replications = 3;
}

message BucketInfo {
	required uint64 id = 1;
	required int64 start_time = 2;
	required int64 end_time = 3;
	repeated VnodeInfo vnodes = 4;
}

message VnodeInfo {
	required uint64 id = 1;
	repeated uint64 owners = 2;
}

// **************Command********************
message StatusResponse {
	required bool ok = 1;
	required uint64 term = 2;
	required uint64 index = 3;
    optional string data = 4;
}

message PingCommand {
  required bytes body = 1;
}

message CreateNodeCommand {
	required NodeInfo info = 1
}

message DeleteNodeCommand {
	required uint64 id = 1;
}

message CreateDatabaseCommand {
	required string tenant = 1;
	required string name = 2;
	required RetentionPolicyInfo policy = 3;
}

message DropDatabaseCommand {
	required string tenant = 1;
	required string name = 2;
}

message CreateBucketCommand {
	required string tenant = 1;
	required string database = 2;
	required int64 timestamp = 3;
}

message DropBucketCommand {
	required string tenant = 1;
	required string database = 2;
	required int64 id = 3;
}

message UpdateRetentionPolicyCommand {
	required string tenant = 1;
	required string database = 2;
	required RetentionPolicyInfo policy = 3;
}

message CreateUserCommand {
	required string tenant = 1;
	required UserInfo user = 2;
}

message DropUserCommand {
	required string tenant = 1;
	required string name = 2;
}

message DropVnodeCommand {
	required string tenant = 1;
	required string database = 2;
	required uint64 id = 3;
}

message UpdateVnodeOwnersCommand {
	required string tenant = 1;
	required string database = 2;
	required uint64 id = 3;
	repeated uint64 add_owners = 4;
	repeated uint64 del_owners = 5;
}

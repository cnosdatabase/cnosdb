syntax = "proto3";
package kv_service;

/* -------------------------------------------------------------------- */
message PingRequest {
  uint64 version = 1;
  bytes body = 2;
}

message PingResponse {
  uint64 version = 1;
  bytes body = 2;
}

message Meta {
  string tenant = 1;
  optional string user = 2;
  optional string password = 3;
}

message WritePointsResponse {
  uint64 points_number = 1;
}

message BatchBytesResponse {
  int32 code = 1;
  bytes data = 2;
}

/* -------------------------------------------------------------------- */
message WriteDataRequest {
  bytes data = 1;
  uint32 precision = 2;
}

message DropTableRequest {
  string db = 1;
  string table = 2;
}

message DropColumnRequest {
  string db = 1;
  string table = 2;
  string column = 3;
}

message UpdateSetValue {
  bytes key = 1;
  optional bytes value = 2;
}

message UpdateTagsRequest {
  string db = 1;
  repeated UpdateSetValue new_tags = 2;
  repeated bytes matched_series = 3;
  bool dry_run = 4;
}

message DeleteFromTableRequest {
  string tenant = 1;
  string database = 2;
  string table = 3;
  bytes predicate = 4;
  uint32 vnode_id = 5;
}

message RaftWriteCommand {
  string tenant = 1;
  string db_name = 2;
  uint32 replica_id = 3;
  oneof command {
    WriteDataRequest write_data = 4;
    DropTableRequest drop_table = 5;
    DropColumnRequest drop_column = 6;
    DeleteFromTableRequest delete_from_table = 7;
    UpdateTagsRequest update_tags = 8;
  }
}


/* -------------------------------------------------------------------- */
message CompactVnodeRequest {
    repeated uint32 vnode_ids = 1;
}

message FetchChecksumRequest {
    uint32 vnode_id = 1;
}

message OpenRaftNodeRequest {
    string tenant = 1;
    string db_name = 2;
    uint32 vnode_id = 3;
    uint32 replica_id = 4;
}

message DropRaftNodeRequest {
    string tenant = 1;
    string db_name = 2;
    uint32 vnode_id = 3;
    uint32 replica_id = 4;
}

message AddRaftFollowerRequest {
    string db_name = 1;
    uint32 replica_id = 2;
    uint64 follower_nid = 3;
}

message RemoveRaftNodeRequest {
    string db_name = 1;
    uint32 replica_id = 2;
    uint32 vnode_id = 3;
}

message DestoryRaftGroupRequest {
    string db_name = 1;
    uint32 replica_id = 2;
}

message AdminCommand {
  string tenant = 1;
  oneof command {
    CompactVnodeRequest compact_vnode = 2;
    OpenRaftNodeRequest open_raft_node = 3;
    DropRaftNodeRequest drop_raft_node = 4;
    FetchChecksumRequest fetch_checksum = 5;

    AddRaftFollowerRequest add_raft_follower = 6;
    RemoveRaftNodeRequest remove_raft_node = 7;
    DestoryRaftGroupRequest destory_raft_group = 8;
  }
}

/* -------------------------------------------------------------------- */
message DownloadFileRequest {
  string filename = 1;
}

message QueryRecordBatchRequest {
    bytes args = 1;
    bytes expr = 2;
    bytes aggs = 3;
}

/* -------------------------------------------------------------------- */
service TSKVService {
  rpc Ping(PingRequest) returns (PingResponse) {};
  rpc DownloadFile(DownloadFileRequest) returns (stream BatchBytesResponse) {};

  rpc TagScan(QueryRecordBatchRequest) returns (stream BatchBytesResponse) {};
  rpc QueryRecordBatch(QueryRecordBatchRequest) returns (stream BatchBytesResponse) {};

  rpc RaftWrite(RaftWriteCommand) returns (BatchBytesResponse) {};
  rpc AdminRequest(AdminCommand) returns (BatchBytesResponse) {};
}

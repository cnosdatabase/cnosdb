statement ok
DROP TABLE IF EXISTS ts_repair;

statement ok
CREATE TABLE ts_repair(value double);

statement ok
INSERT ts_repair VALUES ('2024-01-01T00:00:00.000',1),('2024-01-01T00:00:10.000',2),('2024-01-01T00:00:19.000',3),('2024-01-01T00:00:30.000',4),('2024-01-01T00:00:40.000',5),('2024-01-01T00:00:50.000',6),('2024-01-01T00:01:01.000',7),('2024-01-01T00:01:11.000',8),('2024-01-01T00:01:21.000',9),('2024-01-01T00:01:31.000',10);

query 
SELECT timestamp_repair(time, value) from ts_repair;
----
2024-01-01T00:00:00 1.0
2024-01-01T00:00:10 2.0
2024-01-01T00:00:20 3.0
2024-01-01T00:00:30 4.0
2024-01-01T00:00:40 5.0
2024-01-01T00:00:50 6.0
2024-01-01T00:01:00 7.0
2024-01-01T00:01:10 8.0
2024-01-01T00:01:20 9.0
2024-01-01T00:01:30 10.0
2024-01-01T00:01:40 NaN

query 
SELECT timestamp_repair(time, value, 'method=median') from ts_repair;
----
2024-01-01T00:00:00 1.0
2024-01-01T00:00:10 2.0
2024-01-01T00:00:20 3.0
2024-01-01T00:00:30 4.0
2024-01-01T00:00:40 5.0
2024-01-01T00:00:50 6.0
2024-01-01T00:01:00 7.0
2024-01-01T00:01:10 8.0
2024-01-01T00:01:20 9.0
2024-01-01T00:01:30 10.0
2024-01-01T00:01:40 NaN

query 
SELECT timestamp_repair(time, value, 'method=mode') from ts_repair;
----
2024-01-01T00:00:00 1.0
2024-01-01T00:00:10 2.0
2024-01-01T00:00:20 3.0
2024-01-01T00:00:30 4.0
2024-01-01T00:00:40 5.0
2024-01-01T00:00:50 6.0
2024-01-01T00:01:00 7.0
2024-01-01T00:01:10 8.0
2024-01-01T00:01:20 9.0
2024-01-01T00:01:30 10.0
2024-01-01T00:01:40 NaN

query 
SELECT timestamp_repair(time, value, 'method=cluster') from ts_repair;
----
2024-01-01T00:00:00 1.0
2024-01-01T00:00:10 2.0
2024-01-01T00:00:20 3.0
2024-01-01T00:00:30 4.0
2024-01-01T00:00:40 5.0
2024-01-01T00:00:50 6.0
2024-01-01T00:01:00 7.0
2024-01-01T00:01:10 8.0
2024-01-01T00:01:20 9.0
2024-01-01T00:01:30 10.0
2024-01-01T00:01:40 NaN

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Datafusion: Execution error: Invalid method: invalid", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT timestamp_repair(time, value, 'method=invalid') from ts_repair;

query R
SELECT timestamp_repair(time, value, '') from ts_repair;
----
2024-01-01T00:00:00 1.0
2024-01-01T00:00:10 2.0
2024-01-01T00:00:20 3.0
2024-01-01T00:00:30 4.0
2024-01-01T00:00:40 5.0
2024-01-01T00:00:50 6.0
2024-01-01T00:01:00 7.0
2024-01-01T00:01:10 8.0
2024-01-01T00:01:20 9.0
2024-01-01T00:01:30 10.0
2024-01-01T00:01:40 NaN

query 
SELECT timestamp_repair(time, value, 'interval=10000') from ts_repair;
----
2024-01-01T00:00:00 1.0
2024-01-01T00:00:10 2.0
2024-01-01T00:00:20 3.0
2024-01-01T00:00:30 4.0
2024-01-01T00:00:40 5.0
2024-01-01T00:00:50 6.0
2024-01-01T00:01:00 7.0
2024-01-01T00:01:10 8.0
2024-01-01T00:01:20 9.0
2024-01-01T00:01:30 10.0
2024-01-01T00:01:40 NaN

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Datafusion: Execution error: interval must be positive", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT timestamp_repair(time, value, 'interval=-10000') from ts_repair;

query 
SELECT timestamp_repair(time, value, 'method=cluster&interval=10000') from ts_repair;
----
2024-01-01T00:00:00 1.0
2024-01-01T00:00:10 2.0
2024-01-01T00:00:20 3.0
2024-01-01T00:00:30 4.0
2024-01-01T00:00:40 5.0
2024-01-01T00:00:50 6.0
2024-01-01T00:01:00 7.0
2024-01-01T00:01:10 8.0
2024-01-01T00:01:20 9.0
2024-01-01T00:01:30 10.0
2024-01-01T00:01:40 NaN

query R
SELECT timestamp_repair(time, value, 'start_mode=linear&interval=10000') from ts_repair;
----
2024-01-01T00:00:00.300 1.0
2024-01-01T00:00:10.300 2.0
2024-01-01T00:00:20.300 3.0
2024-01-01T00:00:30.300 4.0
2024-01-01T00:00:40.300 5.0
2024-01-01T00:00:50.300 6.0
2024-01-01T00:01:00.300 7.0
2024-01-01T00:01:10.300 8.0
2024-01-01T00:01:20.300 9.0
2024-01-01T00:01:30.300 10.0
2024-01-01T00:01:40.300 NaN

query R
SELECT timestamp_repair(time, value, 'start_mode=mode&interval=10000') from ts_repair;
----
2024-01-01T00:00:00 1.0
2024-01-01T00:00:10 2.0
2024-01-01T00:00:20 3.0
2024-01-01T00:00:30 4.0
2024-01-01T00:00:40 5.0
2024-01-01T00:00:50 6.0
2024-01-01T00:01:00 7.0
2024-01-01T00:01:10 8.0
2024-01-01T00:01:20 9.0
2024-01-01T00:01:30 10.0
2024-01-01T00:01:40 NaN

query R
SELECT timestamp_repair(time, value, 'method=cluster&start_mode=mode&interval=10000') from ts_repair;
----
2024-01-01T00:00:00 1.0
2024-01-01T00:00:10 2.0
2024-01-01T00:00:20 3.0
2024-01-01T00:00:30 4.0
2024-01-01T00:00:40 5.0
2024-01-01T00:00:50 6.0
2024-01-01T00:01:00 7.0
2024-01-01T00:01:10 8.0
2024-01-01T00:01:20 9.0
2024-01-01T00:01:30 10.0
2024-01-01T00:01:40 NaN

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Datafusion: Execution error: Fail to parse argument: unknown field `a`, expected one of `method`, `interval`, `start_mode`", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT timestamp_repair(time, value, 'method=cluster&start_mode=mode&interval=10000&a=b') from ts_repair;

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Datafusion: Execution error: Fail to parse argument: unknown field `assd`, expected one of `method`, `interval`, `start_mode`", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT timestamp_repair(time, value, 'assd') from ts_repair;

query R
SELECT timestamp_repair(time, value) from ts_repair WHERE value < 8;
----
2024-01-01T00:00:00 1.0
2024-01-01T00:00:10 2.0
2024-01-01T00:00:20 3.0
2024-01-01T00:00:30 4.0
2024-01-01T00:00:40 5.0
2024-01-01T00:00:50 6.0
2024-01-01T00:01:00 7.0
2024-01-01T00:01:10 NaN



statement ok
DROP TABLE IF EXISTS v_fill_repair;

statement ok
CREATE TABLE v_fill_repair(value double);

statement ok
INSERT v_fill_repair VALUES (2,acos(3)),(3,101.0),(4,102.0),(6,104.0),(8,126.0),(10,108.0),(14,acos(3)),(15,113.0),(16,114.0),(18,116.0),(20,acos(3)),(22,acos(3)),(26,124.0),(28,126.0),(30,128.0);

query 
SELECT value_fill(time, value) from v_fill_repair;
----
1970-01-01T00:00:00.000000002 101.0
1970-01-01T00:00:00.000000003 101.0
1970-01-01T00:00:00.000000004 102.0
1970-01-01T00:00:00.000000006 104.0
1970-01-01T00:00:00.000000008 126.0
1970-01-01T00:00:00.000000010 108.0
1970-01-01T00:00:00.000000014 110.5
1970-01-01T00:00:00.000000015 113.0
1970-01-01T00:00:00.000000016 114.0
1970-01-01T00:00:00.000000018 116.0
1970-01-01T00:00:00.000000020 118.66666666666667
1970-01-01T00:00:00.000000022 121.33333333333333
1970-01-01T00:00:00.000000026 124.0
1970-01-01T00:00:00.000000028 126.0
1970-01-01T00:00:00.000000030 128.0

query 
SELECT value_fill(time, value, 'method=mean') from v_fill_repair;
----
1970-01-01T00:00:00.000000002 114.72727272727273
1970-01-01T00:00:00.000000003 101.0
1970-01-01T00:00:00.000000004 102.0
1970-01-01T00:00:00.000000006 104.0
1970-01-01T00:00:00.000000008 126.0
1970-01-01T00:00:00.000000010 108.0
1970-01-01T00:00:00.000000014 114.72727272727273
1970-01-01T00:00:00.000000015 113.0
1970-01-01T00:00:00.000000016 114.0
1970-01-01T00:00:00.000000018 116.0
1970-01-01T00:00:00.000000020 114.72727272727273
1970-01-01T00:00:00.000000022 114.72727272727273
1970-01-01T00:00:00.000000026 124.0
1970-01-01T00:00:00.000000028 126.0
1970-01-01T00:00:00.000000030 128.0

query 
SELECT value_fill(time, value, 'method=previous') from v_fill_repair;
----
1970-01-01T00:00:00.000000002 NaN
1970-01-01T00:00:00.000000003 101.0
1970-01-01T00:00:00.000000004 102.0
1970-01-01T00:00:00.000000006 104.0
1970-01-01T00:00:00.000000008 126.0
1970-01-01T00:00:00.000000010 108.0
1970-01-01T00:00:00.000000014 108.0
1970-01-01T00:00:00.000000015 113.0
1970-01-01T00:00:00.000000016 114.0
1970-01-01T00:00:00.000000018 116.0
1970-01-01T00:00:00.000000020 116.0
1970-01-01T00:00:00.000000022 116.0
1970-01-01T00:00:00.000000026 124.0
1970-01-01T00:00:00.000000028 126.0
1970-01-01T00:00:00.000000030 128.0

query 
SELECT value_fill(time, value, 'method=linear') from v_fill_repair;
----
1970-01-01T00:00:00.000000002 101.0
1970-01-01T00:00:00.000000003 101.0
1970-01-01T00:00:00.000000004 102.0
1970-01-01T00:00:00.000000006 104.0
1970-01-01T00:00:00.000000008 126.0
1970-01-01T00:00:00.000000010 108.0
1970-01-01T00:00:00.000000014 110.5
1970-01-01T00:00:00.000000015 113.0
1970-01-01T00:00:00.000000016 114.0
1970-01-01T00:00:00.000000018 116.0
1970-01-01T00:00:00.000000020 118.66666666666667
1970-01-01T00:00:00.000000022 121.33333333333333
1970-01-01T00:00:00.000000026 124.0
1970-01-01T00:00:00.000000028 126.0
1970-01-01T00:00:00.000000030 128.0

query 
SELECT value_fill(time, value, 'method=AR') from v_fill_repair;
----
1970-01-01T00:00:00.000000002 114.72727272727273
1970-01-01T00:00:00.000000003 101.0
1970-01-01T00:00:00.000000004 102.0
1970-01-01T00:00:00.000000006 104.0
1970-01-01T00:00:00.000000008 126.0
1970-01-01T00:00:00.000000010 108.0
1970-01-01T00:00:00.000000014 110.81413693465396
1970-01-01T00:00:00.000000015 113.0
1970-01-01T00:00:00.000000016 114.0
1970-01-01T00:00:00.000000018 116.0
1970-01-01T00:00:00.000000020 117.33359859078759
1970-01-01T00:00:00.000000022 118.42039170045177
1970-01-01T00:00:00.000000026 124.0
1970-01-01T00:00:00.000000028 126.0
1970-01-01T00:00:00.000000030 128.0

query 
SELECT value_fill(time, value, 'method=MA') from v_fill_repair;
----
1970-01-01T00:00:00.000000002 102.33333333333333
1970-01-01T00:00:00.000000003 101.0
1970-01-01T00:00:00.000000004 102.0
1970-01-01T00:00:00.000000006 104.0
1970-01-01T00:00:00.000000008 126.0
1970-01-01T00:00:00.000000010 108.0
1970-01-01T00:00:00.000000014 108.2
1970-01-01T00:00:00.000000015 113.0
1970-01-01T00:00:00.000000016 114.0
1970-01-01T00:00:00.000000018 116.0
1970-01-01T00:00:00.000000020 110.5
1970-01-01T00:00:00.000000022 110.5
1970-01-01T00:00:00.000000026 124.0
1970-01-01T00:00:00.000000028 126.0
1970-01-01T00:00:00.000000030 128.0

statement error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Datafusion: Execution error: Invalid fill method: nan", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT value_fill(time, value, 'method=nan') from v_fill_repair;

statement error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Datafusion: Execution error: Fail to parse argument: unknown field `a`, expected `method`", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT value_fill(time, value, 'a=b') from v_fill_repair;

statement error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: The function \\"value_fill\\" does not accept 4 function arguments\.", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT value_fill(time, value, 'method=MA', '') from v_fill_repair;

statement error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Datafusion: Execution error: Fail to parse argument: duplicate field `method`", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT value_fill(time, value, 'method=AR&method=MA') from v_fill_repair;

query 
SELECT value_repair(time, value) from v_fill_repair;
----
1970-01-01T00:00:00.000000002 100.0
1970-01-01T00:00:00.000000003 101.0
1970-01-01T00:00:00.000000004 102.0
1970-01-01T00:00:00.000000006 104.0
1970-01-01T00:00:00.000000008 106.0
1970-01-01T00:00:00.000000010 108.0
1970-01-01T00:00:00.000000014 112.0
1970-01-01T00:00:00.000000015 113.0
1970-01-01T00:00:00.000000016 114.0
1970-01-01T00:00:00.000000018 116.0
1970-01-01T00:00:00.000000020 118.0
1970-01-01T00:00:00.000000022 120.0
1970-01-01T00:00:00.000000026 124.0
1970-01-01T00:00:00.000000028 126.0
1970-01-01T00:00:00.000000030 128.0

query 
SELECT value_repair(time, value, 'method=screen') from v_fill_repair;
----
1970-01-01T00:00:00.000000002 100.0
1970-01-01T00:00:00.000000003 101.0
1970-01-01T00:00:00.000000004 102.0
1970-01-01T00:00:00.000000006 104.0
1970-01-01T00:00:00.000000008 106.0
1970-01-01T00:00:00.000000010 108.0
1970-01-01T00:00:00.000000014 112.0
1970-01-01T00:00:00.000000015 113.0
1970-01-01T00:00:00.000000016 114.0
1970-01-01T00:00:00.000000018 116.0
1970-01-01T00:00:00.000000020 118.0
1970-01-01T00:00:00.000000022 120.0
1970-01-01T00:00:00.000000026 124.0
1970-01-01T00:00:00.000000028 126.0
1970-01-01T00:00:00.000000030 128.0

query 
SELECT value_repair(time, value, 'method=lsgreedy') from v_fill_repair;
----
1970-01-01T00:00:00.000000002 100.0
1970-01-01T00:00:00.000000003 101.0
1970-01-01T00:00:00.000000004 102.0
1970-01-01T00:00:00.000000006 104.0
1970-01-01T00:00:00.000000008 106.0
1970-01-01T00:00:00.000000010 108.0
1970-01-01T00:00:00.000000014 112.0
1970-01-01T00:00:00.000000015 113.0
1970-01-01T00:00:00.000000016 114.0
1970-01-01T00:00:00.000000018 116.0
1970-01-01T00:00:00.000000020 118.0
1970-01-01T00:00:00.000000022 120.0
1970-01-01T00:00:00.000000026 124.0
1970-01-01T00:00:00.000000028 126.0
1970-01-01T00:00:00.000000030 128.0

query 
SELECT value_repair(time, value, 'center=0&sigma=0') from v_fill_repair;
----
1970-01-01T00:00:00.000000002 100.0
1970-01-01T00:00:00.000000003 101.0
1970-01-01T00:00:00.000000004 102.0
1970-01-01T00:00:00.000000006 104.0
1970-01-01T00:00:00.000000008 106.0
1970-01-01T00:00:00.000000010 108.0
1970-01-01T00:00:00.000000014 112.0
1970-01-01T00:00:00.000000015 113.0
1970-01-01T00:00:00.000000016 114.0
1970-01-01T00:00:00.000000018 116.0
1970-01-01T00:00:00.000000020 118.0
1970-01-01T00:00:00.000000022 120.0
1970-01-01T00:00:00.000000026 124.0
1970-01-01T00:00:00.000000028 126.0
1970-01-01T00:00:00.000000030 128.0

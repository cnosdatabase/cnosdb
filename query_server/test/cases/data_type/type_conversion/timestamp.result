-- WRITE LINE PROTOCOL --
test_timestamp_conv,ta=a1,tb=b1 fa=1,fb=2 3
-- LINE PROTOCOL END --
422 Unprocessable Entity
{"error_code":"050014","error_message":"write expired time data not permit"}
-- ERROR:  --

-- WRITE LINE PROTOCOL --
test_timestamp_conv,ta=a1,tb=b1 fa=1,fb=2 1667456411000000000
-- LINE PROTOCOL END --
200 OK

-- EXECUTE SQL: explain select fa from test_timestamp_conv where time = 12345678865; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time = TimestampNanosecond(12345678865, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time = TimestampNanosecond(12345678865, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 = 12345678865
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time <> 12345678865; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time != TimestampNanosecond(12345678865, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time != TimestampNanosecond(12345678865, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 != 12345678865
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: All}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time != 12345678865; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time != TimestampNanosecond(12345678865, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time != TimestampNanosecond(12345678865, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 != 12345678865
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: All}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time < 12345678865; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time < TimestampNanosecond(12345678865, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time < TimestampNanosecond(12345678865, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 < 12345678865
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Below } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time <= 12345678865; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time <= TimestampNanosecond(12345678865, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time <= TimestampNanosecond(12345678865, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 <= 12345678865
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time > 12345678865; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time > TimestampNanosecond(12345678865, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time > TimestampNanosecond(12345678865, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 > 12345678865
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time >= 12345678865; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time >= TimestampNanosecond(12345678865, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time >= TimestampNanosecond(12345678865, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 >= 12345678865
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time >= 12345678865; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time >= TimestampNanosecond(12345678865, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time >= TimestampNanosecond(12345678865, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 >= 12345678865
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time = '1997-01-31 09:26:56'; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time = TimestampNanosecond(854702816000000000, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time = TimestampNanosecond(854702816000000000, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 = 854702816000000000
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816000000000, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816000000000, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816000000000, None)), bound: Exactly } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time <> '1997-01-31 09:26:56.123'; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time != TimestampNanosecond(854702816123000000, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time != TimestampNanosecond(854702816123000000, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 != 854702816123000000
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: All}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time != '1997-01-31T09:26:56.123'; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time != TimestampNanosecond(854702816123000000, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time != TimestampNanosecond(854702816123000000, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 != 854702816123000000
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: All}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time < '1997-01-31 09:26:56.123-05:00'; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time < TimestampNanosecond(854720816123000000, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time < TimestampNanosecond(854720816123000000, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 < 854720816123000000
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854720816123000000, None)), bound: Below } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time <= '1997-01-31T09:26:56.123-05:00'; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time <= TimestampNanosecond(854720816123000000, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time <= TimestampNanosecond(854720816123000000, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 <= 854720816123000000
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854720816123000000, None)), bound: Exactly } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time > '1997-01-31T09:26:56.123Z'; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time > TimestampNanosecond(854702816123000000, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time > TimestampNanosecond(854702816123000000, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 > 854702816123000000
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816123000000, None)), bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816123000000, None)), bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time >= '1997-01-31 09:26:56'; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time >= TimestampNanosecond(854702816000000000, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time >= TimestampNanosecond(854702816000000000, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 >= 854702816000000000
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816000000000, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816000000000, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time >= '1997-01-31'; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time >= TimestampNanosecond(854668800000000000, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time >= TimestampNanosecond(854668800000000000, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 >= 854668800000000000
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854668800000000000, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854668800000000000, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time >= 'xxx'; --
200 OK
plan_type,plan


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time between '1997-01-31 09:26:56' and '1997-03-31T09:26:56.123Z'; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time >= TimestampNanosecond(854702816000000000, None) AND test_timestamp_conv.time <= TimestampNanosecond(859800416123000000, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time >= TimestampNanosecond(854702816000000000, None), test_timestamp_conv.time <= TimestampNanosecond(859800416123000000, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 >= 854702816000000000 AND time@0 <= 859800416123000000
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816000000000, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816000000000, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(859800416123000000, None)), bound: Exactly } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time between 12345678865 and 12345678869; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time >= TimestampNanosecond(12345678865, None) AND test_timestamp_conv.time <= TimestampNanosecond(12345678869, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time >= TimestampNanosecond(12345678865, None), test_timestamp_conv.time <= TimestampNanosecond(12345678869, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 >= 12345678865 AND time@0 <= 12345678869
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678869, None)), bound: Exactly } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time between 12345678865 and '1997-03-31T09:26:56.123Z'; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time >= TimestampNanosecond(12345678865, None) AND test_timestamp_conv.time <= TimestampNanosecond(859800416123000000, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time >= TimestampNanosecond(12345678865, None), test_timestamp_conv.time <= TimestampNanosecond(859800416123000000, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 >= 12345678865 AND time@0 <= 859800416123000000
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(859800416123000000, None)), bound: Exactly } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time between 12345678865 and '1997-03-31'; --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time >= TimestampNanosecond(12345678865, None) AND test_timestamp_conv.time <= TimestampNanosecond(859766400000000000, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time >= TimestampNanosecond(12345678865, None), test_timestamp_conv.time <= TimestampNanosecond(859766400000000000, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 >= 12345678865 AND time@0 <= 859766400000000000
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(859766400000000000, None)), bound: Exactly } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time between 12345678865 and 'xxxxx'; --
200 OK
plan_type,plan


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time in (12345678865, '1997-03-31T09:26:56.123Z'); --
200 OK
plan_type,plan
logical_plan,"Projection: test_timestamp_conv.fa
  Filter: test_timestamp_conv.time = TimestampNanosecond(859800416123000000, None) OR test_timestamp_conv.time = TimestampNanosecond(12345678865, None)
    TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time = TimestampNanosecond(859800416123000000, None) OR test_timestamp_conv.time = TimestampNanosecond(12345678865, None)]"
physical_plan,"ProjectionExec: expr=[fa@1 as fa]
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: time@0 = 859800416123000000 OR time@0 = 12345678865
      RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
        TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: ""time"" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly } }, Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(859800416123000000, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(859800416123000000, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(859800416123000000, None)), bound: Exactly } }} })}) }, projection=[time,fa]
"


-- EXECUTE SQL: explain select fa from test_timestamp_conv where time in (12345678865, 'xx'); --
200 OK
plan_type,plan



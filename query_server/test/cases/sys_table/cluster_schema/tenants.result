-- EXECUTE SQL: drop tenant if exists tenant_a; --
200 OK


-- EXECUTE SQL: drop user if exists user_a; --
200 OK


-- EXECUTE SQL: create tenant tenant_a; --
200 OK


-- EXECUTE SQL: create user user_a; --
200 OK


-- EXECUTE SQL: alter tenant tenant_a add user user_a as owner; --
200 OK


-- EXECUTE SQL: drop tenant tenant_a; --
200 OK


-- EXECUTE SQL: drop user user_a; --
200 OK


-- EXECUTE SQL: drop tenant if exists test_ts_tenant1; --
200 OK


-- EXECUTE SQL: drop user if exists test_ts_u1; --
200 OK


-- EXECUTE SQL: drop user if exists test_ts_u2; --
200 OK


-- EXECUTE SQL: create tenant if not exists test_ts_tenant1; --
200 OK


-- EXECUTE SQL: create tenant test_ts_tenant1 with comment='this is test_ts_tenant1'; --
422 Unprocessable Entity
{"error_code":"030009","error_message":"The tenant test_ts_tenant1 already exists"}
-- ERROR:  --

-- EXECUTE SQL: create tenant if not exists test_ts_tenant1 with comment='this is test_ts_tenant1'; --
200 OK


-- EXECUTE SQL: select * from cluster_schema.tenants where tenant_name in ('test_ts_tenant1'); --
200 OK
tenant_name,tenant_options
test_ts_tenant1,"{""comment"":null,""limiter_config"":null,""drop_after"":null,""tenant_is_hidden"":false}"

-- EXECUTE SQL: alter tenant test_ts_tenant1 set comment='Ig.UZn꓃DH~Bgc.ᵵh7uaV*1lE/}\,J씟\h#f^Kr잿z'; --
200 OK


-- EXECUTE SQL: select * from cluster_schema.tenants where tenant_name in ('test_ts_tenant1'); --
200 OK
tenant_name,tenant_options
test_ts_tenant1,"{""comment"":""Ig.UZn꓃DH~Bgc.ᵵh7uaV*1lE/}\\,J씟\\h#f^Kr잿z"",""limiter_config"":null,""drop_after"":null,""tenant_is_hidden"":false}"

-- EXECUTE SQL: ALTER TENANT test_ts_tenant1 unSET COMMENT; --
200 OK


-- EXECUTE SQL: select * from cluster_schema.tenants where tenant_name in ('test_ts_tenant1'); --
200 OK
tenant_name,tenant_options
test_ts_tenant1,"{""comment"":null,""limiter_config"":null,""drop_after"":null,""tenant_is_hidden"":false}"

-- EXECUTE SQL: create user if not exists test_ts_u1; --
200 OK


-- EXECUTE SQL: create user if not exists test_ts_u2; --
200 OK


-- EXECUTE SQL: alter tenant cnosdb add user test_ts_u1 as owner; --
200 OK


-- EXECUTE SQL: alter tenant cnosdb add user test_ts_u2 as member; --
200 OK


-- EXECUTE SQL: alter tenant test_ts_tenant1 add user test_ts_u1 as owner; --
200 OK


-- EXECUTE SQL: alter tenant test_ts_tenant1 add user test_ts_u2 as member; --
200 OK


-- EXECUTE SQL: select * from cluster_schema.tenants where tenant_name in ('test_ts_tenant1'); --
-- AFTER_SORT --
200 OK
tenant_name,tenant_options
test_ts_tenant1,"{""comment"":null,""limiter_config"":null,""drop_after"":null,""tenant_is_hidden"":false}"

-- EXECUTE SQL: drop tenant cnosdb; --
422 Unprocessable Entity
{"error_code":"010064","error_message":"Tenant \"cnosdb\" forbid drop"}
-- ERROR:  --

-- EXECUTE SQL: alter tenant test_ts_tenant1 set comment = 'hello world'; --
200 OK


-- EXECUTE SQL: alter tenant test_ts_tenant1 set _limiter = '{"object_config":{"max_users_number":1,"max_databases":3,"max_shard_number":2,"max_replicate_number":2,"max_retention_time":30},"request_config":{"coord_data_in":{"remote_bucket":{"max":100,"initial":0,"refill":100,"interval":100},"local_bucket":{"max":100,"initial":0}},"coord_data_out":{"remote_bucket":{"max":100,"initial":0,"refill":100,"interval":100},"local_bucket":{"max":100,"initial":0}},"coord_queries":null,"coord_writes":null}}'; --
200 OK


-- EXECUTE SQL: alter tenant cnosdb set _limiter = '{"object_config":{"max_users_number":1,"max_databases":3,"max_shard_number":2,"max_replicate_number":2,"max_retention_time":30},"request_config":{"coord_data_in":{"remote_bucket":{"max":100,"initial":0,"refill":100,"interval":100},"local_bucket":{"max":100,"initial":0}},"coord_data_out":{"remote_bucket":{"max":100,"initial":0,"refill":100,"interval":100},"local_bucket":{"max":100,"initial":0}},"coord_queries":null,"coord_writes":null}}'; --
422 Unprocessable Entity
{"error_code":"010075","error_message":"Tenant cnosdb cannot be restricted"}
-- ERROR:  --

-- EXECUTE SQL: select * from cluster_schema.tenants where tenant_name in ('test_ts_tenant1'); --
-- AFTER_SORT --
200 OK
tenant_name,tenant_options
test_ts_tenant1,"{""comment"":""hello world"",""limiter_config"":{""object_config"":{""max_users_number"":1,""max_databases"":3,""max_shard_number"":2,""max_replicate_number"":2,""max_retention_time"":30},""request_config"":{""coord_data_in"":{""remote_bucket"":{""max"":100,""initial"":0,""refill"":100,""interval"":100},""local_bucket"":{""max"":100,""initial"":0}},""coord_data_out"":{""remote_bucket"":{""max"":100,""initial"":0,""refill"":100,""interval"":100},""local_bucket"":{""max"":100,""initial"":0}},""coord_queries"":null,""coord_writes"":null,""http_data_in"":null,""http_data_out"":null,""http_queries"":null,""http_writes"":null}},""drop_after"":null,""tenant_is_hidden"":false}"

-- EXECUTE SQL: alter tenant test_ts_tenant1 unset comment; --
200 OK


-- EXECUTE SQL: alter tenant test_ts_tenant1 unset _limiter; --
200 OK


-- EXECUTE SQL: select * from cluster_schema.tenants where tenant_name in ('test_ts_tenant1'); --
-- AFTER_SORT --
200 OK
tenant_name,tenant_options
test_ts_tenant1,"{""comment"":null,""limiter_config"":null,""drop_after"":null,""tenant_is_hidden"":false}"

-- EXECUTE SQL: select * from cluster_schema.tenants where tenant_name in ('test_ts_tenant1'); --
-- AFTER_SORT --
200 OK


-- EXECUTE SQL: select * from cluster_schema.tenants where tenant_name in ('test_ts_tenant1'); --
-- AFTER_SORT --
200 OK


-- EXECUTE SQL: select * from cluster_schema.tenants where tenant_name in ('test_ts_tenant1'); --
-- AFTER_SORT --
422 Unprocessable Entity
{"error_code":"010001","error_message":"Datafusion: Error during planning: Table not found, tenant: test_ts_tenant1 db: cluster_schema, table: tenants"}
-- ERROR:  --

-- EXECUTE SQL: select * from cluster_schema.tenants where tenant_name in ('test_ts_tenant1'); --
-- AFTER_SORT --
422 Unprocessable Entity
{"error_code":"010001","error_message":"Datafusion: Error during planning: Table not found, tenant: test_ts_tenant1 db: cluster_schema, table: tenants"}
-- ERROR:  --

-- EXECUTE SQL: select * from cluster_schema.tenants where tenant_name in ('test_ts_tenant1'); --
-- AFTER_SORT --
422 Unprocessable Entity
{"error_code":"010001","error_message":"Datafusion: Error during planning: Table not found, tenant: test_ts_tenant1 db: cluster_schema, table: tenants"}
-- ERROR:  --

-- EXECUTE SQL: select 1; --
-- AFTER_SORT --
422 Unprocessable Entity
{"error_code":"010016","error_message":"Auth error: The tenant tenant_not_exists not found"}
-- ERROR:  --
